/*
 * 8Puzzle.c
 *
 *  Created on: Dec 8, 2017
 *      Author: Chrollo
 */

#include"StackLinkedBased.h"
#include"Puzzle.h"
#include<stdio.h>
#include<stdlib.h>


extern FILE *out;


void W_file(int  a[Size][Size] )
{
	for(int i=0;i<3;i++)
	{
		for(int j=0;j<3;j++)
			{

			fprintf(out, "  %d ",a[i][j]);
			}
		fprintf(out, "\n");
	}
	fprintf(out, "             ==========================================================\n");
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_Down(int a[Size][Size],int aa[Size][Size],int i,int j)
{
	for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
				{
				aa[i][j]=a[i][j];
				}
				}

	if(i==0)
	return 0;
	int t=aa[i-1][j];
	aa[i][j]=t;
	aa[i-1][j]=0;


	return 1;


}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_Up(int a[Size][Size],int aa[Size][Size],int i,int j)
{
	for(int i=0;i<3;i++)
	{
		for(int j=0;j<3;j++)
			{
			aa[i][j]=a[i][j];
			}
			}
	if(i==Size-1)
  return 0;
	int t=aa[i+1][j];
		aa[i][j]=t;
		aa[i+1][j]=0;

		return 1;
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_R(int a[Size][Size],int aa[Size][Size],int i,int j)
{
	for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
				{
				aa[i][j]=a[i][j];
				}
				}

	if(j==0)
			return 0;

	int t=aa[i][j-1];
		aa[i][j]=t;
		aa[i][j-1]=0;


		return 1;

}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_L(int a[Size][Size],int aa[Size][Size])
{

	for(int i=0;i<3;i++)
		{
			for(int j=0;j<3;j++)
				{
				aa[i][j]=a[i][j];
				}
				}

int i,j;
	for(int k=0;k<Size;++k)
			for(int t=0;t<Size;++t)
				if(aa[k][t]==0)
				{
					i=k;
					j=t;
					break;
				}

//if(j==3){return 0;}

	int t=aa[i][j+1];
		aa[i][j]=t;
		aa[i][j+1]=0;
return 1;


}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


void F_Zero(int a[Size][Size],int *i,int *j)
{
	for(int k=0;k<Size;++k)
		for(int t=0;t<Size;++t)
			if(a[k][t]==0)
			{
				*i=k;
				*j=t;
			}
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int T_Equal(int a[Size][Size],int b[Size][Size])
{
	int cunt =0;
	for(int i=0;i<Size;i++)
		for(int j=0;j<Size;j++)
			if(a[i][j]==b[i][j])
			   cunt++;
	if(cunt==9)
	return 1;
	else return 0;
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//




